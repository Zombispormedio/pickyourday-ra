var app=angular.module("ar-toolkit",["ionic"]);angular.module("ar-toolkit").run(["$ionicPlatform",function(e){e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]),angular.module("ar-toolkit").directive("arView",["ARUtils","ARCamera","AR",function(e,t,n){return{restrict:"A",link:function(e,r,a){var o=r[0];t.wait(function(){n.init(o)})}}}]),angular.module("ar-toolkit").factory("AR3D",function(){var e=function(e){function t(){o.needsUpdate=!0}var n=new THREE.Camera,r=new THREE.Scene,a=new THREE.PlaneGeometry(2,2,0),o=new THREE.Texture(e),i=new THREE.MeshBasicMaterial({map:o,depthTest:!1,depthWrite:!1}),u=new THREE.Mesh(a,i);return r.add(u),{camera:n,scene:r,update:t}},t=function(){function e(e){n.add(e)}function t(e){n.remove(e)}var n=new THREE.Scene,r=new THREE.Camera;return{scen:n,camera:r,add:e,remove:t}},n=function(n,r,a){var o=new THREE.WebGLRenderer({canvas:n});o.setSize(r.width,r.height),o.autoClear=!1;new e(a),new t,new THREE.SpotLight(16777215);return{}};return{create:n}}),angular.module("ar-toolkit").factory("ARCamera",["ARUtils",function(e){var t=document.createElement("video");e.fullPage(t);var n=function(e,t,n){var r=void 0;return navigator.getUserMedia?r=navigator.getUserMedia(e,t,n):navigator.webkitGetUserMedia&&(r=navigator.webkitGetUserMedia(e,t,n)),r},r=function(e){return function(n){var r=window.URL||window.webkitURL;t.src=r.createObjectURL(n),t.play(),e()}},a=function(e){console.log("An error occured! "+e)},o=function(e){n({video:!0,audio:!1},r(e),a)},i=function(){return{width:t.width,height:t.height}},u=function(e){e.drawImage(t,0,0)};return{wait:o,copyToContext:u,getDimensions:i}}]),angular.module("ar-toolkit").factory("ARDetector",function(){function e(){return{}}return{create:e}}),angular.module("ar-toolkit").factory("AR",["ARCamera","ARDetector","AR3D",function(e,t,n){var r,a,o,i,u=function(u){r=document.createElement("canvas");var c=e.getDimensions();r.width=c.width,r.height=c.height,a=r.getContext("2d"),o=t.create(r),i=n.create(u,c,r)};return{init:u}}]),angular.module("ar-toolkit").factory("ARUtils",function(){return{fullPage:function(e){e.width=window.innerWidth,e.height=window.innerHeight}}});
//# sourceMappingURL=data:application/json;base64,
